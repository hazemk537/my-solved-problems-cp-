/*
اللهم صل على نبينا محمد وعلى ال نبينا محمد
اللهم علم ينتفع به ونؤجر عليه       */

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
void start()
{
#define ll                  long long
#define inf                  2e18 + 10
#define cinn(n)              scanf("%lld", &n)
#define fr(i,n)             for (ll i=0;i<n;i++)
#define fr1(i,n)            for(ll i=1;i<=n;i++)
#define coutt(x)             printf("%lld\n",x)
#define endl 	            "\n"
#define pb                  push_back
#define asort(a)            sort(a,a+n)
#define agsort(a)            sort(a,a+n,greater<int>())
#define vsort(v)         sort(v.begin(), v.end());
#define vgsort(v)         sort(v.begin(), v.end(),greater<int>());
#define pn                  printf("\n")
#define md                  10000007
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>

#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
#endif
}
vector<long long>prefix(1000000);
vector<long long>data(1000000);
ordered_set os;
void prefix_sum(ll size_vector,vector<ll>&data)
{
    prefix[0]=data[0];
    fr1(i,size_vector)
    {
        prefix[i]=data[i]+prefix[i-1];
    }
}

bool is_pair_n_sum_exist_twp(vector<ll>&twop, ll n, ll target)
{
    ll first =0,ans=0,last=n-1;
    while (first < last)
    {
        if (twop[first] + twop[last] == target)       return 1;
else if (twop[first] + twop[last] < target)  first++;//صغير كبره
        else                last--;//كبير صغره
    }
    return ans;
}

int main()
{
    start();
ll sizo,t1; cin>>sizo;
vector<ll>data(sizo);

fr(i,sizo)cin>>data[i];

fr(i,sizo){cin>>t1,t1*=-1,data[i]+=t1;}
vsort(data);
ll first=0,last=sizo-1,ans=0;

while(first<last)
{
if(data[first]+data[last]>0) {ans+=last-first,last--;}
//عنصر صغير نفع مع كبير يبقا الكبير ينفع مع كل الى بينهم
else first++;
}
cout<<ans;

return 0;
}
