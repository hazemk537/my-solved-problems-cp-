/*
اللهم صل على نبينا محمد وعلى ال نبينا محمد
اللهم علم ينتفع به ونؤجر عليه       */

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
vector<int>pos;
vector<int>neg;
void start()
{
#define ll                  long long
#define scl(n)              scanf("%lld", &n)
#define fr(i,n)             for (ll i=0;i<n;i++)
#define fr1(i,n)            for(ll i=1;i<=n;i++)
#define pfl(x)              printf("%lld\n",x)
#define endl 	            "\n"
#define pb                  push_back
#define asort(a)            sort(a,a+n)
#define dsort(a)            sort(a,a+n,greater<int>())
#define vasort(v)         sort(v.begin(), v.end());
#define vdsort(v)         sort(v.begin(), v.end(),greater<int>());
#define pn                  printf("\n")
#define md                  10000007
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>

#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
#endif
}
ordered_set os;
ll getpos(int number)
{
    ll res=1;
    for (int i=pos.size()-1; i>=0&&number--; i--)
    {
        res*=pos[i];
    }
    return res;
}
ll getneg(int number)
{
    ll res=1;
    if (number%2==0)
    {
        for (int i=0; i<neg.size()&&number--; i++)
        {
            res*=neg[i];
        }
    }
    else
    {
        for (int i=neg.size()-1; i>=0&&number--; i--)
        {
            res*=neg[i];
        }
    }
    return res;
}
int main()
{
    start();

    int n;
    int arr[200000+10];
    int t;
    cin>>t;
    while(t--)
    {
        pos.clear();
        neg.clear();
        cin>>n;
        int flag=0;
        for (int i=0; i<n; i++)
            cin>>arr[i];

        for (int i=0; i<n; i++)
        {
            if (arr[i]>0)
                pos.push_back(arr[i]);
            else if (arr[i]==0)
                flag=1;
            else
                neg.push_back(arr[i]);
        }
        sort(pos.begin(),pos.end());
        sort(neg.begin(),neg.end());
        ll ma=-(1e18 +10);
        for (int i=0; i<=5; i++)
        {
            int j=5-i;
            if (i<=pos.size()&&j<=neg.size())
            {
                ma=max(ma,getpos(i)*getneg(j));
            }
        }
        if (ma<0&&flag)
            ma=0;

        cout<<ma<<endl;
    }
    return 0;
}
