/*
اللهم صل على نبينا محمد وعلى ال نبينا محمد
اللهم علم ينتفع به ونؤجر عليه       */
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
void start()
{
#define ll                   long long
#define inf                  2e18 + 10
#define fr(i,n)             for (ll i=0;i<n;i++)
#define fr1(i,n)            for(ll i=1;i<=n;i++)
#define endl 	            "\n"
#define pb                  push_back
#define asort(a)            sort(a,a+n)
#define agsort(a)            sort(a,a+n,greater<int>())
#define vsort(v)         sort(v.begin(), v.end());
#define vgsort(v)         sort(v.begin(), v.end(),greater<int>());
#define pn                  printf("\n")
#define mod                  1000000007
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
#endif
}
ordered_set os;
const int N=2e4+1; //const
vector<int> graph[N]; //Array of vectors
vector<int>myfunc(N); //visited
void dfs(int node_id)
{
    myfunc[node_id]=1;
    for(auto children:graph[node_id])
        if(!myfunc[children])
            dfs(children);
}
int main()
{
    start();
    int nodes,edges;
    cin>>nodes>>edges;
    if(nodes-1 != edges)//edges=nodes-1
        cout<<"NO";
    else
    {
        while(edges--)
        {
            int t1,t2;
            cin>>t1>>t2;
            t1--,t2--;
            graph[t1].pb(t2);
        }
        dfs(0);
        for(int i=0; i<nodes; ++i)
        {
            if(!myfunc[i])
            {
                cout<<"NO";
                return 0;
            }
        }
        cout<<"YES";
    }
    return 0;
}
